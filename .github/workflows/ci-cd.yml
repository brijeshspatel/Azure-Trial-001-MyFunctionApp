name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/*, develop ]
  pull_request:
    branches: [ main, feature/*, develop ]

permissions:
  contents: read
  actions: read
  security-events: write    # Required for CodeQL analysis upload
  checks: write             # Required for uploading test results as checks (if used)
  # issues: write           # Only if you use actions that create issues

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
    - name: Publish build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: '**/bin/Release/**/*'

  unit-test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet: [8.0.x, 7.0.x]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - name: Restore dependencies
      run: dotnet restore
      continue-on-error: false
    - name: Run unit tests with coverage
      run: dotnet test --configuration Release --collect:"XPlat Code Coverage"
      continue-on-error: false
    - name: Publish test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.dotnet }}
        path: '**/TestResults/**/*.xml'
      continue-on-error: false
    - name: Notify on failure (email)
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.sendgrid.net
        server_port: 587
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: "CI/CD Failure: ${{ github.workflow }} on ${{ github.ref }}"
        to: brijesh.patel@gmail.com
        from: brijesh.patel@gmail.com
        body: |
          The CI/CD pipeline failed for ${{ github.repository }}.
          Workflow: ${{ github.workflow }}
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          Please review the logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  code-quality:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Run dotnet format
      run: dotnet format --verify-no-changes
    - name: Check for vulnerable packages
      run: dotnet list package --vulnerable || true

  codeql:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Secret scanning
      uses: github/codeql-action/init@v3
      with:
        languages: csharp
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
