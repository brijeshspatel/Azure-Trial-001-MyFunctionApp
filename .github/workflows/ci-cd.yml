name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/*, develop ]
  pull_request:
    branches: [ main, feature/*, develop ]

permissions:
  contents: read
  actions: read
  security-events: write    # Required for CodeQL analysis upload
  checks: write             # Required for uploading test results as checks (if used)
  # issues: write           # Only if you use actions that create issues

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Run tests with coverage
      run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

    - name: Publish test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: '**/TestResults/**/*.xml'

    - name: Check for vulnerable packages
      run: dotnet list package --vulnerable || true

    - name: Secret scanning
      uses: github/codeql-action/init@v3
      with:
        languages: csharp

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # Optional: Deploy to Azure (add your secrets in GitHub repo settings)
  # deploy:
  #   needs: build-test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: '8.0.x'
  #   - name: Azure Functions Deploy
  #     uses: Azure/functions-action@v1
  #     with:
  #       app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
  #       publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
